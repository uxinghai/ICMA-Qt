/**
 * @file icmaStart.h
 *
 * @Breife None
 *
 * @version 1.0
 * @date 2025/1/10
 *
 * @author uxinghai
 * @copyright Copyright (c) 2025
 */
#pragma once

#include <QDebug>

namespace icmaStart
{
  inline void printFZ()
  {
    qDebug() << "\n";
    qDebug() << R"(
////////////////////////////////////////////////////////////////////
//                          _ooOoo_                               //
//                         o8888888o                              //
//                         88" . "88                              //
//                         (| ^_^ |)                              //
//                         O\  =  /O                              //
//                      ____/`---'\____                           //
//                    .'  \\|     |//  `.                         //
//                   /  \\|||  :  |||//  \                        //
//                  /  _||||| -:- |||||-  \                       //
//                  |   | \\\  -  /// |   |                       //
//                  | \_|  ''\---/''  |   |                       //
//                  \  .-\__  `-`  ___/-. /                       //
//                ___`. .'  /--.--\  `. . ___                     //
//              ."" '<  `.___\_<|>_/___.'  >'"".                  //
//            | | :  `- \`.;`\ _ /`;.`/ - ` : | |                 //
//            \  \ `-.   \_ __\ /__ _/   .-` /  /                 //
//      ========`-.____`-.___\_____/___.-`____.-'========         //
//                           `=---='                              //
//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        //
//             佛祖保佑       永不宕机      永无BUG                   //
////////////////////////////////////////////////////////////////////)";
  }

  inline void printStart()
  {
    qDebug() <<
      "(♥◠‿◠)ﾉﾞ  ICMA启动成功   ლ(´ڡ`ლ)ﾞ\n"
      "  ___ ____ __  __    _      ____  _             _\n"
      " |_ _/ ___|  \\/  |  / \\    / ___|| |_ __ _ _ __| |_\n"
      "  | | |   | |\\/| | / _ \\   \\___ \\| __/ _` | '__| __|\n"
      "  | | |___| |  | |/ ___ \\   ___) | || (_| | |  | |_\n |___\\____|_|  |_/_/   "
      "\\_\\ |____/ \\__\\__,_|_|   \\__|\n                                                    ";
  }
}
